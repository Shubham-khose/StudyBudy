/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-10-17 16:49:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import entities.AllCourses;
import java.util.List;
import entities.SmSignUp;

public final class WatchVideo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("entities.AllCourses");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("entities.SmSignUp");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

    SmSignUp data = (SmSignUp) session.getAttribute("data");
 List<AllCourses> list=(List<AllCourses>) session.getAttribute("cource");
 System.out.print(list);
     if(data==null) {
      out.write("\r\n");
      out.write("    ");
      if (true) {
        _jspx_page_context.forward("/login-sm");
        return;
      }
      out.write(" \r\n");
      out.write("     ");
}
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Watch video </title>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      background-color: #f4f4f4;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("      margin: 20px;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      margin: 0 auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar {\r\n");
      out.write("      margin: 12px;\r\n");
      out.write("      width: 200px;\r\n");
      out.write("      background-color: #2c3e50;\r\n");
      out.write("      color: #ecf0f1;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      height: calc(100vh - 40px);\r\n");
      out.write("      overflow-y: auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar ul {\r\n");
      out.write("      list-style: none;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar li {\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      padding: 12px;\r\n");
      out.write("      border-bottom: 1px solid #34495e;\r\n");
      out.write("      transition: background-color 0.3s;\r\n");
      out.write("      position: relative;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar li:hover {\r\n");
      out.write("      background-color: #34495e;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar li a {\r\n");
      out.write("      color: white;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      display: block;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar .sub-lectures {\r\n");
      out.write("      margin-left: 20px;\r\n");
      out.write("      display: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .sidebar .sub-lectures.active {\r\n");
      out.write("      display: block;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .arrow {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      right: 10px;\r\n");
      out.write("      top: 50%;\r\n");
      out.write("      transform: translateY(-50%);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .arrow:before {\r\n");
      out.write("      content: '\\25B6'; /* Unicode character for right arrow */\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      font-size: 14px;\r\n");
      out.write("      color: #ecf0f1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .content {\r\n");
      out.write("      margin: 12px;\r\n");
      out.write("      flex: 1;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      background-color: #ecf0f1;\r\n");
      out.write("      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    iframe {\r\n");
      out.write("      margin: 0 auto;\r\n");
      out.write("      display: block;\r\n");
      out.write("      width: 90%;\r\n");
      out.write("      height: 400px;\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 5px;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #lecture-name {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      margin-top: 20px;\r\n");
      out.write("      font-size: 18px;\r\n");
      out.write("      color: #2c3e50;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <div class=\"sidebar\">\r\n");
      out.write("    <ul id=\"lecture-list\">\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"javascript:void(0);\" onclick=\"toggleSubLectures(this)\">\r\n");
      out.write("          <span class=\"arrow\"></span>\r\n");
      out.write("          Lecture 1\r\n");
      out.write("        </a>\r\n");
      out.write("        <ul class=\"sub-lectures\">\r\n");
      out.write("          <li><a href=\"javascript:void(0);\" onclick=\"showLecture('SubLecture1VideoID', 1.1)\">Lecture 1.1</a></li>\r\n");
      out.write("          <li><a href=\"javascript:void(0);\" onclick=\"showLecture('SubLecture2VideoID', 1.2)\">Lecture 1.2</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"javascript:void(0);\" onclick=\"toggleSubLectures(this)\">\r\n");
      out.write("          <span class=\"arrow\"></span>\r\n");
      out.write("          Lecture 2\r\n");
      out.write("        </a>\r\n");
      out.write("        <ul class=\"sub-lectures\">\r\n");
      out.write("          <li><a href=\"javascript:void(0);\" onclick=\"showLecture('SubLecture3VideoID', 2.1)\">Lecture 2.1</a></li>\r\n");
      out.write("          <li><a href=\"javascript:void(0);\" onclick=\"showLecture('SubLecture4VideoID', 2.2)\">Lecture 2.2</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"content\">\r\n");
      out.write("    <h2 style=\"text-align: center;\">ReactJS</h2>\r\n");
      out.write("    <iframe id=\"lecture-iframe\" src=\"\" frameborder=\"0\"></iframe>\r\n");
      out.write("    <p id=\"lecture-name\">Select a lecture from the sidebar to view its content.</p>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function toggleSubLectures(element) {\r\n");
      out.write("    var subLectures = element.nextElementSibling;\r\n");
      out.write("    subLectures.classList.toggle('active');\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function showLecture(videoId, lectureNumber) {\r\n");
      out.write("    var iframe = document.getElementById('lecture-iframe');\r\n");
      out.write("    var lectureNameElement = document.getElementById('lecture-name');\r\n");
      out.write("\r\n");
      out.write("    // Use the YouTube embed URL with the videoId\r\n");
      out.write("    iframe.src = `https://www.youtube.com/embed/${videoId}`;\r\n");
      out.write("\r\n");
      out.write("    // Set the lecture name using the passed lectureNumber\r\n");
      out.write("    lectureNameElement.innerText = `Lecture ${lectureNumber}`;\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
